## Multi-threading analysis of `cet::includer`{.cpp}

The semantics of the `cet::includer` are the same as `cet::include`,
where multi-threading is not an appropriate context.  The user of this
class will have to handle the threading concerns.

There are several `static const` local variables, but those do not introduce any problems.

### Non-threading observations:

* We have separate `cet::includer::include` and `cet::include` implementations.  The latter seems not to be used in the entire `art` suite.  We should compare the two facilities and determine if one can be removed in favor of the other.

* Several of the functions receive `const` references to `const_iterator` objects.  Should change to passing iterator by copy.

* It may be desirable to change the `cet::filepath_maker::operator()`
virtual function to be `const`-qualified, so that the `cet::includer`
constructors can receive those arguments by `const` reference.
