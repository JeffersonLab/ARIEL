# Make 1000 events for detector simulation (based on $TOYEXPERIMENT_DIR/fcl/input04.fcl)

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardModules.fcl"

process_name: "SimulateTheYak"

source: { 
          module_type: "EmptyEvent" 
	  firstRun: 4 
          maxEvents: 1000 
        } 

outputs: { 
	 outfile: { 
                      module_type: "RootOutput" 
		      fileName: "output/input04_splitdet.art" 
                    } 
         } 

services : {

  message               : @local::default_message
  RandomNumberGenerator : {}
  TFileService          : { fileName : "output/input04_splitdet.root" }

  # From toyExperiment
  Geometry   : { geometryFile   : "databaseFiles/geom01.fcl"       }
  Conditions : { conditionsFile : "databaseFiles/conditions01.fcl" }
  PDT        : { pdtFile        : "databaseFiles/pdt.fcl"          }

}

physics: { 
           producers: { 
	   	      	detsim: { 
                                  module_type: "DetectorSimulation" 
				  genParticleTag: "evtgen" 
                                  seed: 14 
                                } 

                        evtgen: { 
                                  module_type: "EventGenerator" 
                                  seed: 13 
                                  signal: { 
				  	    pmax: 2000 
                                            pmin: 0 
                                          } 
				  background: { 
				  	      	n: 7.5e-1 
                                                pmax: 800 
                                                pmin: 0 
                                              } 
                                } 

                        fitterInner: { 
                                  module_type: "FindAndFitHelix" 
				  hitsTag: "makeHitsInner" 
                                  minHits: 5 
                                  seed: 16 
                                } 

                        fitterOuter: { 
                                  module_type: "FindAndFitHelix" 
				  hitsTag: "makeHitsOuter" 
                                  minHits: 5 
                                  seed: 16 
                                } 

                        makeHitsInner: { 
                                    module_type: "HitMaker" 
				    intersectionTags: [ "detsim:inner" ]
                                    seed: 15 
                                  } 

                        makeHitsOuter: { 
                                    module_type: "HitMaker" 
				    intersectionTags: [ "detsim:outer" ]
                                    seed: 15 
                                  } 

                        randomsaver: {
                                       module_type: "RandomNumberSaver" 
                                     } 

                      } # end of producers

	 analyzers: { 
  	 	       inspectFitsInner: { 
                                       module_type: "InspectFittedHelix" 
				       fitsTag: "fitterInner" 
                                       maxPrint: 0 
                                  } 

  	 	       inspectFitsOuter: { 
                                       module_type: "InspectFittedHelix" 
				       fitsTag: "fitterOuter" 
                                       maxPrint: 0 
                                  } 

                        inspectGens: { 
                                       module_type: "InspectGenParticles" 
				       genParticleTag: "evtgen" 
                                       maxPrint: 0 
                                     } 

                        inspectHitsInner: { 
                                       module_type: "InspectTrkHits" 
				       hitMakerTag: "makeHitsInner" 
                                       maxPrint: 0 
                                     } 

                        inspectHitsOuter: { 
                                       module_type: "InspectTrkHits" 
				       hitMakerTag: "makeHitsOuter" 
                                       maxPrint: 0 
                                     } 

                        inspectIntersections: { 
                                                module_type: "InspectIntersections" 
					      	intersectionTags: [ "detsim:outer", "detsim:inner" ]
                                                maxPrint: 0 
                                              } 

                        massPlotInner: { 
                                    module_type: "MassPlot" 
				    fitsTag: "fitterInner" 
                                    maxPrint: 0 
                                  } 

                        massPlotOuter: { 
                                    module_type: "MassPlot" 
				    fitsTag: "fitterOuter" 
                                    maxPrint: 0 
                                  } 

                      } # end of analyzers

           pInner: [ "evtgen", "detsim", "makeHitsInner", "fitterInner", "randomsaver" ]
           pOuter: [ "evtgen", "detsim", "makeHitsOuter", "fitterOuter", "randomsaver" ]
           trigger_paths: [ "pInner", "pOuter"  ]

           eI:  [ "inspectGens", "inspectIntersections", "inspectHitsInner", 
                                 "inspectFitsInner", "massPlotInner", "outfile" ]
           eO:  [ "inspectHitsOuter", "inspectFitsOuter", "massPlotOuter"]
           

}  # end of physics
